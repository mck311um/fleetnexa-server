model Customer {
  id                String    @id @default(dbgenerated("gen_random_uuid()"))
  firstName          String
  lastName          String
  gender            String
  dateOfBirth       DateTime
  email             String?   
  phone             String    
  tenantId          String
  profileImage       String?
  status            CustomerStatus @default(ACTIVE)
  
  address           CustomerAddress[]
  documents         CustomerDocument[]
  vehicleDamages    VehicleDamage[]
  bookings          Booking[]
  invoices          Invoice[]

  isActive          Boolean   @default(false)
  isDeleted         Boolean   @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime? @updatedAt
  updatedBy         String?

  tenant            Tenant    @relation(fields: [tenantId], references: [id])

}

model CustomerAddress {
  id                String    @id @default(dbgenerated("gen_random_uuid()"))
  street            String?
  zipCode           String?
  countryId         String?
  customerId        String    @unique
  createdAt         DateTime  @default(now())
  updatedAt         DateTime? @updatedAt
  stateId           String?
  villageId         String?

  country           Country?   @relation(fields: [countryId], references: [id])
  state             State?     @relation(fields: [stateId], references: [id])
  customer          Customer? @relation(fields: [customerId], references: [id])
  village           Village?   @relation(fields: [villageId], references: [id])
}

model CustomerDocument {
  id                 String    @id @default(dbgenerated("gen_random_uuid()"))
  documentId         String
  customerId         String
  documentNumber     String
  issuedDate         DateTime
  expiryDate         DateTime
  createdAt          DateTime  @default(now())
  updatedAt          DateTime? @updatedAt
  createdBy          String?
  updatedBy          String?
  documents          String[]

  document           DocumentType @relation(fields: [documentId], references: [id])
  customer           Customer   @relation(fields: [customerId], references: [id])
  notes              String?
}