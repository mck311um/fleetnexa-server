// model VehicleGroup {
//   id                    String          @id @default(dbgenerated("gen_random_uuid()"))
//   group                 String
//   description           String
//   tenantId              String
//   cancellationAmount    Int             @default(0)
//   cancellationPolicy    String          @default("percent")
//   fuelPolicyId          String?
//   lateFee               Int             @default(0)
//   lateFeePolicy         String          @default("percent")
//   maximumRental         Int             @default(10)
//   minimumAge            Int             @default(18)
//   minimumRental         Int             @default(1)
//   price                 Float
//   chargeTypeId          String?
//   timeBetweenRentals    Int             @default(0)
//   damageAmount          Int             @default(0)
//   damagePolicy          String          @default("percent")
//   drivingExperience     Int             @default(1)
//   refundAmount          Int             @default(100)
//   refundPolicy          String          @default("percent")

//   chargeType            ChargeType?     @relation(fields: [chargeTypeId], references: [id])
//   fuelPolicy            FuelPolicy?     @relation(fields: [fuelPolicyId], references: [id])
//   tenant                Tenant          @relation(fields: [tenantId], references: [id])

//   isActive              Boolean         @default(false)
//   isDeleted             Boolean         @default(false)
//   createdAt             DateTime        @default(now())
//   updatedAt             DateTime?       @updatedAt
//   updatedBy             String?

//   discounts             VehicleDiscount[]

  
// }

model Vehicle {
  id                    String   @id @default(dbgenerated("gen_random_uuid()"))
  year                  Int
  color                 String
  licensePlate          String   @unique
  engineVolume          Int
  vehicleStatusId       String
  fuelTypeId            String
  transmissionId        String
  wheelDriveId          String
  fuelLevel             Int
  odometer              Int
  steering              String   @default("left")
  featuredImage         String
  images                String[]
  insurance             String
  insuranceExpiry       DateTime
  registrationNumber    String
  registrationExpiry    DateTime
  numberOfSeats         Int
  numberOfDoors         Int
  vin                   String
  brandId               String
  modelId               String
  tenantId              String?
  locationId            String?

  price                 Float     
  chargeTypeId          String?
  timeBetweenRentals    Int
  minimumAge            Int
  minimumRental         Int
  fuelPolicyId          String?
  drivingExperience     Int       @default(1)
  cancellationAmount    Int       @default(0)
  cancellationPolicy    String    @default("percent")
  lateFee               Int       @default(0)
  maxHours              Int       @default(0)
  refundAmount          Int       @default(100)
  additionalDriverFee   Float     @default(0)
  securityDeposit       Float     @default(0)


  isActive              Boolean   @default(false)
  isDeleted             Boolean   @default(false)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime? @updatedAt
  createdBy             String?
  updatedBy             String?
  
  damages               VehicleDamage[]
  features              VehicleFeature[] @relation("VehicleToVehicleFeature")
  rentals               Rental[]
  rentalActivity        RentalActivity[]
  serviceLogs           VehicleServiceLog[]
  scheduledServices     VehicleServiceSchedule[]
  discounts             VehicleDiscount[]

  chargeType            ChargeType?     @relation(fields: [chargeTypeId], references: [id])
  fuelPolicy            FuelPolicy?     @relation(fields: [fuelPolicyId], references: [id])
  fuelType              FuelType?       @relation(fields: [fuelTypeId], references: [id])
  brand                 VehicleBrand?   @relation(fields: [brandId], references: [id])
  model                 VehicleModel?   @relation(fields: [modelId], references: [id])
  transmission          Transmission?   @relation(fields: [transmissionId], references: [id])
  vehicleStatus         VehicleStatus?  @relation(fields: [vehicleStatusId], references: [id])
  wheelDrive            WheelDrive?     @relation(fields: [wheelDriveId], references: [id])
  tenant                Tenant?         @relation(fields: [tenantId], references: [id])
  location              TenantLocation? @relation(fields: [locationId], references: [id])

}

model VehicleDiscount {
  id                    String       @id @default(dbgenerated("gen_random_uuid()"))
  amount                Decimal      @db.Decimal(10, 2)
  discountPolicy        String
  periodMax             Int
  periodMin             Int
  vehicleId             String

  isActive              Boolean   @default(false)
  isDeleted             Boolean   @default(false)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime? @updatedAt
  createdBy             String?
  updatedBy             String?

  vehicle               Vehicle @relation(fields: [vehicleId], references: [id])
  
}

model VehicleDamage {
  id                    String          @id @default(dbgenerated("gen_random_uuid()"))
  description           String?
  title                 String
  isRepaired            Boolean
  severity              Severity         @default(MINOR)
  location              DamageLocation   @default(EXTERIOR)
  estimatedRepairCost   Float?
  images                String[]
  partId                String
  vehicleId             String
  repairedAt            DateTime?
  customerId            String?

  isActive              Boolean   @default(false)
  isDeleted             Boolean   @default(false)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime? @updatedAt
  createdBy             String?
  updatedBy             String?

  vehicle               Vehicle @relation(fields: [vehicleId], references: [id])
  customer              Customer? @relation(fields: [customerId], references: [id])

  serviceLogs           VehicleServiceLog[]
}

model VehiclePart {
  id             String          @id @default(dbgenerated("gen_random_uuid()"))
  partName       String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime?       @updatedAt
}

model FuelPolicy {
  id           String         @id @default(dbgenerated("gen_random_uuid()"))
  policy       String
  code         String

  vehicles     Vehicle[]
}

model VehicleServiceLog {
  id                  String    @id @default(dbgenerated("gen_random_uuid()"))
  vehicleId           String
  serviceId           String
  servicedAt          DateTime
  notes               String?
  contactId           String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime? @updatedAt
  updatedBy           String?
  scheduledServiceId  String?
  damageId            String?
  cost                Float?
  documents           String[]
  
  vehicle             Vehicle @relation(fields: [vehicleId], references: [id])
  maintenanceService  MaintenanceService @relation(fields: [serviceId], references: [id])
  contact             TenantContact? @relation(fields: [contactId], references: [id])
  scheduledService    VehicleServiceSchedule? @relation("ScheduleToLogs", fields: [scheduledServiceId], references: [id])
  damage              VehicleDamage? @relation(fields: [damageId], references: [id])
}

model VehicleServiceSchedule {
  id                  String    @id @default(dbgenerated("gen_random_uuid()"))
  vehicleId           String
  serviceId           String
  scheduledDate       DateTime
  isCompleted         Boolean   @default(false)


  vehicle             Vehicle @relation(fields: [vehicleId], references: [id])
  maintenanceService  MaintenanceService @relation(fields: [serviceId], references: [id])
  serviceLogs         VehicleServiceLog[] @relation("ScheduleToLogs")
}