model Service {
  id            String          @id @default(dbgenerated("gen_random_uuid()"))
  service       String
  description   String
  icon          String?
  TenantService TenantService[]
}

model ChargeType {
  id         String   @id @default(dbgenerated("gen_random_uuid()"))
  chargeType String
  unit       String
  rentals    Rental[]
}

model VehicleBrand {
  id      String         @id @default(dbgenerated("gen_random_uuid()"))
  brand   String
  vehicle Vehicle[]
  models  VehicleModel[]
}

model VehicleModel {
  id       String           @id @default(dbgenerated("gen_random_uuid()"))
  model    String
  brandId  String
  typeId   String?
  vehicles Vehicle[]
  brand    VehicleBrand     @relation(fields: [brandId], references: [id])
  bodyType VehicleBodyType? @relation(fields: [typeId], references: [id])
}

model VehicleBodyType {
  id       String         @id @default(dbgenerated("gen_random_uuid()"))
  bodyType String
  models   VehicleModel[]
}

model VehicleStatus {
  id       String    @id @default(dbgenerated("gen_random_uuid()"))
  status   String    @unique
  vehicles Vehicle[]
}

model FuelType {
  id      String    @id @default(dbgenerated("gen_random_uuid()"))
  fuel    String
  Vehicle Vehicle[]
}

model Transmission {
  id               String    @id @default(dbgenerated("gen_random_uuid()"))
  transmission     String
  transmissionCode String?
  vehicles         Vehicle[]
}

model VehicleFeature {
  id       String    @id @default(dbgenerated("gen_random_uuid()"))
  feature  String
  vehicles Vehicle[] @relation("VehicleToVehicleFeature")
}

model WheelDrive {
  id       String    @id @default(dbgenerated("gen_random_uuid()"))
  drive    String
  code     String
  vehicles Vehicle[]
}

model InvoiceSequence {
  id      String   @id @default(dbgenerated("gen_random_uuid()"))
  prefix  String
  example String
  Tenant  Tenant[]
}

model Country {
  id                 String            @id @default(dbgenerated("gen_random_uuid()"))
  code               String            @unique
  country            String            @unique
  geoNameId          Int?              @unique
  addresses          Address[]
  caribbeanCountries CaribbeanCountry?
  customerAddresses  CustomerAddress[]
  driverLicenses     DriverLicense[]
  licenseClasses     LicenseClass[]
  presetLocations    PresetLocation[]
  states             State[]
  storefrontUser     StorefrontUser[]
}

model State {
  id                String            @id @default(dbgenerated("gen_random_uuid()"))
  countryId         String
  state             String
  geoNameId         Int?              @unique
  addresses         Address[]
  customerAddresses CustomerAddress[]
  presetLocations   PresetLocation[]
  country           Country           @relation(fields: [countryId], references: [id])
  storefrontUser    StorefrontUser[]
  villages          Village[]
}

model Village {
  id                String            @id @default(dbgenerated("gen_random_uuid()"))
  stateId           String
  village           String
  geoNameId         Int?              @unique
  addresses         Address[]
  customerAddresses CustomerAddress[]
  presetLocations   PresetLocation[]
  storefrontUser    StorefrontUser[]
  state             State             @relation(fields: [stateId], references: [id])
}

model MaintenanceService {
  id                String                   @id @default(dbgenerated("gen_random_uuid()"))
  service           String
  description       String
  serviceLog        VehicleServiceLog[]
  serviceSchedule   VehicleServiceSchedule[]

  scheduledMaintenance VehicleMaintenance[]
}

model DocumentType {
  id               String             @id @default(dbgenerated("gen_random_uuid()"))
  type             String
  customerDocument CustomerDocument[]
}

model PresetLocation {
  id        String  @id @default(dbgenerated("gen_random_uuid()"))
  location  String
  street    String
  villageId String
  stateId   String
  countryId String
  country   Country @relation(fields: [countryId], references: [id])
  state     State   @relation(fields: [stateId], references: [id])
  village   Village @relation(fields: [villageId], references: [id])
}


model LicenseClass {
  id            String          @id @default(dbgenerated("gen_random_uuid()"))
  class         String
  name          String
  description   String
  countryId     String
  DriverLicense DriverLicense[]
  country       Country         @relation(fields: [countryId], references: [id])
}

model MessengerApp {
  id           String                 @id @default(dbgenerated("gen_random_uuid()"))
  app          String
  icon         String
  customerApps CustomerMessengerApp[]
}

model Equipment {
  id               String            @id @default(dbgenerated("gen_random_uuid()"))
  equipment        String
  description      String
  icon             String?
  tenantEquipments TenantEquipment[]
}

model ContactType {
  id             String          @id @default(dbgenerated("gen_random_uuid()"))
  type           String
  tenantContacts TenantContact[]
}

model PaymentType {
  id          String    @id @default(dbgenerated("gen_random_uuid()"))
  type        String
  description String
  payments    Payment[]
}

model VendorType {
  id      String    @id @default(dbgenerated("gen_random_uuid()"))
  type    String

}