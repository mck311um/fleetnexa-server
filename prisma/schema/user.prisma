model User {
  id                     String          @id @default(dbgenerated("gen_random_uuid()"))
  password               String
  firstName               String
  lastName               String
  username               String          @unique           
  tenantId               String?
  roleId                 String?
  color                  String          @default("#343434")
  theme                  String          @default("light")
  createdAt              DateTime        @default(now())
  updatedAt              DateTime?       @updatedAt
  requiredPasswordChange Boolean         @default(true)
  lastChanged            DateTime?
  email                  String?         @unique
  profilePicture          String?         @default("https://fleetnexa.s3.us-east-1.amazonaws.com/Global+Images/fallback.png")
  show                   Boolean?        @default(false)

  rentals                Rental[]
  rentalActivity         RentalActivity[]
  transactions           Transactions[]
      
  role                   UserRole?       @relation(fields: [roleId], references: [id])
  tenant                 Tenant?         @relation(fields: [tenantId], references: [id])

  @@unique([username, tenantId])
}

model StorefrontUser {
  id                     String          @id @default(dbgenerated("gen_random_uuid()"))
  password               String
  firstName               String
  lastName               String
  dateOfBirth            DateTime
  gender                 String
  email                  String          @unique
  phone                  String          @unique
  driverLicenseNumber    String          @unique
  licenseExpiry          DateTime
  licenseIssued          String
  street                 String
  villageId              String
  stateId                String
  countryId              String
  createdAt              DateTime        @default(now())
  updatedAt              DateTime?       @updatedAt

  profilePicture          String?         @default("https://fleetnexa.s3.us-east-1.amazonaws.com/Global+Images/fallback.png")
  country                Country         @relation(fields: [countryId], references: [id])
  village                Village         @relation(fields: [villageId], references: [id])
  state                  State           @relation(fields: [stateId], references: [id])


  bookings               StorefrontBooking[]
}

model AdminUser {
  id                     String          @id @default(dbgenerated("gen_random_uuid()"))
  password               String
  firstName               String
  lastName               String
  email                  String          @unique
  createdAt              DateTime        @default(now())
  updatedAt              DateTime?       @updatedAt
}

model UserRole {
  id              String          @id @default(dbgenerated("gen_random_uuid()"))
  name            String          
  description     String?
  tenantId        String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime?       @updatedAt
  isDeleted       Boolean         @default(false)
  updatedBy       String?
  show            Boolean?        @default(false)


  users           User[]
  tenant          Tenant          @relation(fields: [tenantId], references: [id])
  rolePermission  UserRolePermission[]

  @@unique([name, tenantId])
}

model AppPermission {
  id              String          @id @default(dbgenerated("gen_random_uuid()"))
  name            String          @unique
  category        String
  description     String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime?       @updatedAt

  rolePermissions UserRolePermission[]
}

model UserRolePermission {
  id             String         @id @default(dbgenerated("gen_random_uuid()"))
  roleId         String
  permissionId   String
  assignedBy     String?
  assignedAt     DateTime       @default(now())

  role           UserRole       @relation(fields: [roleId], references: [id])
  permission     AppPermission  @relation(fields: [permissionId], references: [id])

  @@unique([roleId, permissionId])
}