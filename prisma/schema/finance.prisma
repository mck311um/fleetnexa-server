model ShopDMMerchant {
  id              String    @id @default(dbgenerated("gen_random_uuid()"))
  tenantId        String    @unique
  merchant_handle String
  merchant_secret String

  tenant           Tenant @relation(fields: [tenantId], references: [id])
}

model Currency {
  id        String    @id @default(dbgenerated("gen_random_uuid()"))
  code      String    @unique
  currency  String?
  symbol    String?

  tenants       Tenant[]
  bases         ExchangeRate[] @relation("BaseCurrency")
  targets       ExchangeRate[] @relation("TargetCurrency")
  currencyRates TenantCurrencyRate[]
  payments      Payment[]
}

model TenantCurrencyRate {
  id          String    @id @default(dbgenerated("gen_random_uuid()"))
  tenantId    String
  currencyId  String
  fromRate    Float?    @default(0.0)
  toRate      Float?    @default(0.0)
  enabled     Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  tenant      Tenant    @relation(fields: [tenantId], references: [id])
  currency    Currency  @relation(fields: [currencyId], references: [id])

  @@unique([tenantId, currencyId])
}

model ExchangeRate {
  id        String    @id @default(dbgenerated("gen_random_uuid()"))
  base      String
  target    String
  rate      Float
  updatedAt DateTime? @updatedAt
  createdAt DateTime  @default(now())

  baseCurrency   Currency @relation("BaseCurrency", fields: [base], references: [code])
  targetCurrency Currency @relation("TargetCurrency", fields: [target], references: [code])

  @@unique([base, target])
}